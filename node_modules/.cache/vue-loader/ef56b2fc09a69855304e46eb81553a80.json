{"remainingRequest":"/home/yyuri/Documentos/pocSorroll/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yyuri/Documentos/pocSorroll/src/components/BarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/yyuri/Documentos/pocSorroll/src/components/BarChart.vue","mtime":1603986554724},{"path":"/home/yyuri/Documentos/pocSorroll/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yyuri/Documentos/pocSorroll/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/yyuri/Documentos/pocSorroll/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yyuri/Documentos/pocSorroll/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BarChart.vue"],"names":[],"mappingsfile":"BarChart.vue","sourceRoot":"src/components","sourcesContent":["<script>\nimport { Bar } from 'vue-chartjs'\nexport default {\n  extends: Bar,\n  props: ['random', 'dataarray'],\n  data: () => ({\n    options: {\n\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        yAxes: [\n          {\n            gridLines: {\n              display: true,\n              offsetGridLines: false,\n            },\n            ticks: {\n                min: 0,\n                max: 255,\n                stepSize: 15\n            }\n          }],\n          xAxes: [{\n            gridLines: {\n              display: false,\n              offsetGridLines: false,\n            },\n          }]\n      },\n      animation: {\n        duration: 0,\n      }\n    },\n    data: {\n      labels: [\"20Hz\", \"25 Hz\", \"31.5 Hz\", \"40 Hz\", \"50 Hz\", \"63 Hz\", \"80 Hz\", \"100 Hz\", \"125 Hz\", \"160 Hz\", \"200 Hz\", \"250 Hz\", \"315 Hz\", \"400 Hz\", \"500 Hz\", \"630 Hz\", \"800 Hz\", \"1000 Hz\", \"1250 Hz\", \"1600 Hz\", \"2000 Hz\", \"2500 Hz\", \"3150 Hz\", \"4000 Hz\", \"5000 Hz\", \"6300 Hz\", \"8000 Hz\", \"10 kHz\", \"12,5 kHz\", \"16 kHz\", \"20 kHz\"],\n      datasets: [{\n          label: `dB(A)`,\n          data: [7, 11, 5, 8, 3, 7],\n          borderWidth: 1\n        }\n      ]\n    },\n    selectionContext: null,\n    selectionRect: {\n      w: 0,\n      startX: 0,\n      startY: 0\n    },\n    drag: false,\n    colors: null,\n    ctx: null,\n  }),\n  mounted () {\n    this.ctx = this.$refs.canvas.getContext('2d');\n    this.getArrayOfColors();\n    let randomArray = [];\n    for(let i = 0; i<31; i++) randomArray.push(Math.floor(Math.random() * 100));\n    this.data = {\n      labels: [\"20Hz\", \"25 Hz\", \"31.5 Hz\", \"40 Hz\", \"50 Hz\", \"63 Hz\", \"80 Hz\", \"100 Hz\", \"125 Hz\", \"160 Hz\", \"200 Hz\", \"250 Hz\", \"315 Hz\", \"400 Hz\", \"500 Hz\", \"630 Hz\", \"800 Hz\", \"1000 Hz\", \"1250 Hz\", \"1600 Hz\", \"2000 Hz\", \"2500 Hz\", \"3150 Hz\", \"4000 Hz\", \"5000 Hz\", \"6300 Hz\", \"8000 Hz\", \"10 kHz\", \"12,5 kHz\", \"16 kHz\", \"20 kHz\"],\n      datasets: [{\n          label: `dB(A)`,\n          data: this.dataarray,\n          borderColor: '#222222',\n          borderWidth: 1,\n          backgroundColor: this.colors\n        }\n      ]\n    },\n    this.renderChart(this.data, this.options)\n\n  },\n  destroyed() {\n\n  },\n  methods: {\n    randomNum() {\n      return Math.floor(Math.random() * 100);\n    },\n    waveToHue(l) {\n      let hue = (270*(650-l))/250;\n      let light = (270*(700-l))/250;\n      return hue > 0 ? 'hsl('+hue+','+light+'50%,50%)' : 'hsl(0,50%,50%)';\n    },\n    getArrayOfColors() {\n      let soundfreq = [20, 25, 31, 40, 50, 63, 80, 100, 125, 160, 200, 250, 315, 400, 500, 630, 800, 1000, 1250, 1600, 2000, 2500, 3150, 4000, 5000, 6300, 8000, 10000, 12000, 16000, 20000]\n      let intervals = (620-350)/(soundfreq.length+1);\n    //   let colors = [\"#475b7c\", \"#4a5f82\", \"#4e6489\", \"#51698f\", \"#556d96\", \"#58729c\", \"#5c77a3\", \"#607caa\", \"#6380b0\", \"#6785b7\", \"#6a8abd\", \"#6e8ec4\", \"#7193ca\", \"#7598d1\", \"#789cd7\",\n    // \"#789cd7\",\"#7598d1\",\"#7193ca\",\"#6e8ec4\",\"#6a8abd\",\"#6785b7\",\"#6380b0\",\"#607caa\",\"#5c77a3\",\"#58729c\",\"#556d96\",\"#51698f\",\"#4e6489\",\"#4a5f82\",\"#475b7c\"]\n    //   let invertedcolors = colors.reverse();\n      let colors = [];\n      for(let i=0; i<soundfreq.length;i++) {\n        //let add = soundfreq.length/40;\n        //let r =50-add*i;\n        colors.push(this.spectral_color(420+i*intervals))\n      }\n      this.colors = colors;\n    },\n    spectral_color(l) //Returns a vertical linearGradient with 3 steps, white - equivalency between Light Wavelength and Audiblesound-wavelength - black\n      {\n        let t=0;\n        let r=0;\n        let g=0;\n        let b=0;\n             if ((l>=400.0)&&(l<410.0)) { t=(l-400.0)/(410.0-400.0); r=+(0.33*t)-(0.20*t*t); }\n        else if ((l>=410.0)&&(l<475.0)) { t=(l-410.0)/(475.0-410.0); r=0.14-(0.13*t*t); }\n        else if ((l>=545.0)&&(l<595.0)) { t=(l-545.0)/(595.0-545.0); r=+(1.98*t)-(t*t); }\n        else if ((l>=595.0)&&(l<650.0)) { t=(l-595.0)/(650.0-595.0); r=0.98+(0.06*t)-(0.40*t*t); }\n        else if ((l>=650.0)&&(l<700.0)) { t=(l-650.0)/(700.0-650.0); r=0.65-(0.84*t)+(0.20*t*t); }\n             if ((l>=415.0)&&(l<475.0)) { t=(l-415.0)/(475.0-415.0); g=+(0.80*t*t); }\n        else if ((l>=475.0)&&(l<590.0)) { t=(l-475.0)/(590.0-475.0); g=0.8 +(0.76*t)-(0.80*t*t); }\n        else if ((l>=585.0)&&(l<639.0)) { t=(l-585.0)/(639.0-585.0); g=0.84-(0.84*t); }\n             if ((l>=400.0)&&(l<475.0)) { t=(l-400.0)/(475.0-400.0); b=+(2.20*t)-(1.50*t*t); }\n        else if ((l>=475.0)&&(l<560.0)) { t=(l-475.0)/(560.0-475.0); b=0.7-(t)+(0.30*t*t); }\n        //console.log(colors)\n        let [hue,saturation,light] = this.rgbToHsl(Math.round(254*r),Math.round(254*g),Math.round(254*b))\n        let background = this.ctx.createLinearGradient(0, 0, 0, 170);\n\n        // background.addColorStop(0, 'hsl('+8+','+1*100+'%,'+1*50+'%)');\n        // background.addColorStop(0.3, 'hsl('+8+','+1*100+'%,'+1*50+'%)');\n        // background.addColorStop(0.5, 'hsl('+50+','+0.7*92+'%,'+1*59+'%)');\n        // background.addColorStop(0.7, 'hsl('+50+','+0.7*92+'%,'+1*59+'%)');\n        // background.addColorStop(1, 'hsl('+122+','+0.5*86+'%,'+1*33+'%)');\n\n        background.addColorStop(0, 'hsl('+hue+','+0.1*saturation+'%,'+1*light+'%)');\n        background.addColorStop(0.3, 'hsl('+hue+','+0.3*saturation+'%,'+light+'%)');\n        background.addColorStop(1, 'hsl(214, 21%, 45%)');\n\n        //\n        // background.addColorStop(0, 'hsl('+hue+','+1*saturation+'%,'+1*light+'%)');\n        // background.addColorStop(0.4, 'hsl('+hue+','+0.5*saturation+'%,'+light+'%)');\n        // background.addColorStop(0.8, 'hsl('+hue+','+0.2*saturation+'%,'+light+'%)');\n        // background.addColorStop(1, 'hsl('+hue+','+0.2*saturation+'%,'+0.9*light+'%)');\n\n\n        return background;\n      //return 'rgb('+parseInt(254*r)+','+parseInt(254*g)+','+parseInt(254*b)+')';\n    },\n    rgbToHsl(r, g, b) {\n        r /= 255, g /= 255, b /= 255;\n        let max = Math.max(r, g, b), min = Math.min(r, g, b);\n        let h, s, l = (max + min) / 2;\n\n        if(max == min){\n            h = s = 0; // achromatic\n        }else{\n            let d = max - min;\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n            switch(max){\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n                case g: h = (b - r) / d + 2; break;\n                case b: h = (r - g) / d + 4; break;\n            }\n            h /= 6;\n        }\n        //if(h===0&&s>0.9 && l<0.1) {s=2;l=2;}\n        // if(h===s===l===0) {\n        //   s=3;l=2;\n        // }\n        return [Math.floor(h * 360), Math.floor(s * 100), Math.floor(l * 100)];\n    },\n  },\n  watch: {\n    random() {\n        let randomArray = [];\n        for(let i = 0; i<30; i++) randomArray.push(Math.floor(Math.random() * 100));\n        this.data = {\n          labels: [\"20Hz\", \"25 Hz\", \"31.5 Hz\", \"40 Hz\", \"50 Hz\", \"63 Hz\", \"80 Hz\", \"100 Hz\", \"125 Hz\", \"160 Hz\", \"200 Hz\", \"250 Hz\", \"315 Hz\", \"400 Hz\", \"500 Hz\", \"630 Hz\", \"800 Hz\", \"1000 Hz\", \"1250 Hz\", \"1600 Hz\", \"2000 Hz\", \"2500 Hz\", \"3150 Hz\", \"4000 Hz\", \"5000 Hz\", \"6300 Hz\", \"8000 Hz\", \"10 kHz\", \"12,5 kHz\", \"16 kHz\", \"20 kHz\"],\n          datasets: [{\n              label: `dB(A)`,\n              data: this.dataarray,\n              borderColor: '#222222',\n              borderWidth: 1,\n              backgroundColor: this.colors\n            }\n          ]\n        };\n        this.renderChart(this.data, this.options)\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n"]}]}