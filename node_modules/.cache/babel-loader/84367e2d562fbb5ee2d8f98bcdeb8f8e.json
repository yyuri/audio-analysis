{"remainingRequest":"/home/yyuri/Documentos/pocSorroll/node_modules/babel-loader/lib/index.js!/home/yyuri/Documentos/pocSorroll/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/yyuri/Documentos/pocSorroll/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yyuri/Documentos/pocSorroll/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/yyuri/Documentos/pocSorroll/src/App.vue","mtime":1604263699815},{"path":"/home/yyuri/Documentos/pocSorroll/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yyuri/Documentos/pocSorroll/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/yyuri/Documentos/pocSorroll/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/yyuri/Documentos/pocSorroll/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA,OAAA,QAAA,MAAA,2BAAA;AACA,OAAA,WAAA,MAAA,8BAAA;AACA,OAAA,SAAA,MAAA,4BAAA;AAEA,OAAA,MAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA,QADA;AAEA,IAAA,SAAA,EAAA,SAFA;AAGA,IAAA,WAAA,EAAA;AAHA,GAFA;AAOA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,QAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,YAAA,MAAA,EAAA;AADA;AADA,SADA;AAMA,QAAA,UAAA,EAAA,IANA;AAOA,QAAA,mBAAA,EAAA,KAPA;AAQA,QAAA,MAAA,EAAA;AACA,UAAA,KAAA,EAAA,CACA;AACA,YAAA,SAAA,EAAA;AACA,cAAA,OAAA,EAAA,IADA;AAEA,cAAA,eAAA,EAAA;AAFA;AADA,WADA,CADA;AAQA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,SAAA,EAAA;AACA,cAAA,OAAA,EAAA,IADA;AAEA,cAAA,eAAA,EAAA,KAFA;AAGA,cAAA,aAAA,EAAA,CAHA;AAIA,cAAA,cAAA,EAAA;AAJA,aADA;AAQA,YAAA,KAAA,EAAA;AACA,cAAA,OAAA,EAAA;AADA;AARA,WAAA;AARA,SARA;AA6BA,QAAA,MAAA,EAAA;AACA,UAAA,OAAA,EAAA;AADA,SA7BA;AAgCA,QAAA,SAAA,EAAA;AACA,UAAA,QAAA,EAAA;AADA;AAhCA,OADA;AAqCA,MAAA,IAAA,EAAA;AACA,QAAA,MAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA,CAAA;AACA,UAAA,KAAA,EAAA,cADA;AAEA,UAAA,IAAA,EAAA,EAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SAAA;AAFA,OArCA;AA8CA,MAAA,UAAA,EAAA,KA9CA;AA+CA,MAAA,aAAA,EAAA;AACA,QAAA,CAAA,EAAA,CADA;AAEA,QAAA,MAAA,EAAA,CAFA;AAGA,QAAA,MAAA,EAAA,CAHA;AAIA,QAAA,UAAA,EAAA,IAJA;AAKA,QAAA,SAAA,EAAA;AALA,OA/CA;AAsDA,MAAA,OAAA,EAAA,IAtDA;AAuDA,MAAA,MAAA,EAAA,IAvDA;AAwDA,MAAA,OAAA,EAAA,IAxDA;AAyDA,MAAA,YAAA,EAAA,CAzDA;AA0DA,MAAA,UAAA,EAAA,GA1DA;AA2DA,MAAA,KAAA,EAAA,CAAA,CAAA,EAAA,GAAA,CA3DA;AA4DA,MAAA,KAAA,EAAA,MAAA,CAAA,UA5DA;AA6DA,MAAA,cAAA,EAAA,KA7DA;AA8DA,MAAA,eAAA,EAAA,uBA9DA;AA+DA,MAAA,WAAA,EAAA,uBA/DA;AAgEA,MAAA,eAAA,EAAA,EAhEA;AAiEA,MAAA,SAAA,EAAA,IAjEA;AAkEA,MAAA,KAAA,EAAA,IAlEA;AAmEA,MAAA,MAAA,EAAA,IAnEA;AAoEA,MAAA,QAAA,EAAA,IApEA;AAqEA,MAAA,gBAAA,EAAA,IArEA;AAsEA,MAAA,MAAA,EAAA,IAtEA;AAuEA,MAAA,KAAA,EAAA,IAvEA;AAwEA,MAAA,UAAA,EAAA,IAxEA;AAyEA,MAAA,MAAA,EAAA,IAzEA;AA0EA,MAAA,OAAA,EAAA,KA1EA;AA2EA,MAAA,UAAA,EAAA;AA3EA,KAAA;AAAA,GAPA;AAoFA,EAAA,OApFA,qBAoFA;AACA,QAAA,QAAA,GAAA,KAAA,MAAA,CAAA,YAAA,IAAA,MAAA,CAAA,kBAAA,GAAA;AACA,SAAA,KAAA,GAAA,QAAA,CAAA,aAAA,CAAA,OAAA,CAAA;AACA,SAAA,MAAA,GAAA,QAAA,CAAA,wBAAA,CAAA,KAAA,KAAA,CAAA;;AAEA,QAAA,KAAA,GAAA,IAAA,CALA,CAOA;;;AAEA,IAAA,KAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA,CACA,IADA,CACA,UAAA,IAAA,EAAA;AAAA,aAAA,IAAA,CAAA,WAAA,EAAA;AAAA,KADA,EAEA,IAFA,CAEA,QAAA,CAAA,eAAA,CAAA,IAAA,CAAA,QAAA,CAFA,EAGA,IAHA,CAGA,UAAA,MAAA,EAAA;AACA,UAAA,OAAA,GAAA,MAAA,CAAA,cAAA,CAAA,CAAA,CAAA;AAEA,UAAA,MAAA,GAAA,CAAA,CAAA,CAAA;AACA,UAAA,QAAA,GAAA,MAAA,CAAA,QAAA;;AAEA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,GAAA,QAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,CAAA,GAAA,CAAA,GAAA,QAAA,GAAA,OAAA,CAAA,MAAA,GAAA,CAAA;AACA,QAAA,CAAA,GAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,CAAA;AACA,QAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACA;;AACA,MAAA,KAAA,CAAA,iBAAA,CAAA,QAAA,EAAA,MAAA,EAXA,CAYA;;;AACA,eAAA,KAAA,CAAA,MAAA,EAAA,GAAA,EAAA,OAAA,EAAA;AACA,YAAA,GAAA,GAAA,CAAA;;AACA,aAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,OAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA;AACA,UAAA,EAAA,GAAA,EAAA,GAAA,CAAA,GAAA,CAAA,GAAA,MAAA,CAAA,EAAA,CAAA;AACA,UAAA,GAAA,IAAA,EAAA,GAAA,EAAA;AACA;;AACA,YAAA,GAAA,GAAA,IAAA,CAAA,IAAA,CAAA,GAAA,GAAA,OAAA,CAAA,CANA,CAMA;;AACA,eAAA,KAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA;AACA,KAzBA,EATA,CAoCA;;AACA,SAAA,QAAA,GAAA,QAAA,CAAA,cAAA,EAAA;AACA,SAAA,MAAA,CAAA,OAAA,CAAA,KAAA,QAAA;AACA,SAAA,QAAA,CAAA,OAAA,CAAA,QAAA,CAAA,WAAA;AACA,SAAA,QAAA,CAAA,qBAAA,GAAA,GAAA;AACA,SAAA,QAAA,CAAA,OAAA,GAAA,EAAA,CAzCA,CAyCA;AAIA;;AACA,IAAA,MAAA,CAAA,gBAAA,CAAA,SAAA,EAAA,KAAA,QAAA;AACA,GAnIA;AAoIA,EAAA,SApIA,uBAoIA;AACA,IAAA,MAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,KAAA,QAAA;AACA,GAtIA;AAuIA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,CADA,EACA;AACA,UAAA,CAAA,CAAA,IAAA,KAAA,OAAA,EAAA;AACA,YAAA,KAAA,KAAA,CAAA,MAAA,EAAA;AACA,eAAA,IAAA;AACA,SAFA,MAGA;AACA,eAAA,KAAA;AACA;AACA,OAPA,MAQA,IAAA,CAAA,CAAA,IAAA,KAAA,YAAA,EAAA;AACA,aAAA,KAAA,CAAA,WAAA,IAAA,CAAA;AACA,YAAA,CAAA,GAAA,KAAA,UAAA,GAAA,KAAA,KAAA,CAAA,WAAA,GAAA,KAAA,MAAA,CAAA,YAAA,CAAA,QAAA;AACA,aAAA,OAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,MAAA;AACA,aAAA,OAAA,CAAA,QAAA,CAAA,CAAA,EAAA,KAAA,MAAA,EAAA,CAAA,CAAA,EAAA,KAAA,KAAA;AACA,OALA,MAMA,IAAA,CAAA,CAAA,IAAA,KAAA,WAAA,EAAA;AACA,aAAA,KAAA,CAAA,WAAA,IAAA,CAAA;;AACA,YAAA,EAAA,GAAA,KAAA,UAAA,GAAA,KAAA,KAAA,CAAA,WAAA,GAAA,KAAA,MAAA,CAAA,YAAA,CAAA,QAAA;;AACA,aAAA,OAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,MAAA;AACA,aAAA,OAAA,CAAA,QAAA,CAAA,EAAA,EAAA,KAAA,MAAA,EAAA,CAAA,CAAA,EAAA,KAAA,KAAA;AACA;AACA,KAtBA;AAuBA,IAAA,IAvBA,kBAuBA;AAAA;;AACA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,IAAA,GAFA,CAIA;;AACA,WAAA,gBAAA,GAAA,WAAA,CAAA,YAAA;AACA,YAAA,MAAA,GAAA,MAAA,CAAA,QAAA,CAAA,iBAAA;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,IAAA,UAAA,CAAA,MAAA,CAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,oBAAA,CAAA,MAAA,CAAA,SAAA;;AACA,QAAA,MAAA,CAAA,cAAA,GAAA,CAAA,MAAA,CAAA,cAAA;AACA,OALA,EAKA,EALA,CAAA;AAMA,WAAA,MAAA,GAAA,MAAA,CAAA,qBAAA,CAAA,KAAA,WAAA,CAAA,CAXA,CAYA;AACA,KApCA;AAqCA,IAAA,KArCA,mBAqCA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,KAAA;AACA,MAAA,aAAA,CAAA,KAAA,gBAAA,CAAA;AACA,MAAA,MAAA,CAAA,oBAAA,CAAA,KAAA,MAAA;AACA,KA1CA;AA2CA,IAAA,SA3CA,qBA2CA,KA3CA,EA2CA;AACA,UAAA,CAAA,KAAA,UAAA,EAAA;AACA,aAAA,KAAA,CAAA,WAAA,GAAA,KAAA,CAAA,MAAA,GAAA,KAAA,KAAA,CAAA,CAAA,CAAA;AACA,YAAA,CAAA,GAAA,KAAA,CAAA,MAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,KAAA,UAAA;AACA,aAAA,OAAA,CAAA,WAAA,GAAA,GAAA;AACA,aAAA,OAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,MAAA;AACA,aAAA,OAAA,CAAA,QAAA,CAAA,CAAA,EAAA,KAAA,MAAA,EAAA,CAAA,CAAA,EAAA,KAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,UAAA,EAAA,GAAA,GAAA,CAAA;AACA;AACA,KAnDA;AAoDA,IAAA,WApDA,yBAoDA;AACA,UAAA,CAAA,KAAA,KAAA,CAAA,MAAA,EAAA;AACA,YAAA,CAAA,GAAA,CAAA,KAAA,MAAA,CAAA,YAAA,CAAA,WAAA,GAAA,KAAA,KAAA,CAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,KAAA,UAAA;AACA,aAAA,OAAA,CAAA,WAAA,GAAA,GAAA;AACA,aAAA,OAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,MAAA;AACA,aAAA,OAAA,CAAA,QAAA,CAAA,CAAA,EAAA,KAAA,MAAA,EAAA,CAAA,CAAA,EAAA,KAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,UAAA,EAAA,GAAA,GAAA,CAAA;AACA,QAAA,MAAA,CAAA,qBAAA,CAAA,KAAA,WAAA;AACA,OANA,MAOA;AACA,YAAA,GAAA,GAAA,CAAA,KAAA,MAAA,CAAA,YAAA,CAAA,WAAA,GAAA,KAAA,KAAA,CAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,KAAA,UAAA;;AACA,aAAA,OAAA,CAAA,WAAA,GAAA,GAAA;AACA,aAAA,OAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,MAAA;AACA,aAAA,OAAA,CAAA,QAAA,CAAA,GAAA,EAAA,KAAA,MAAA,EAAA,CAAA,CAAA,EAAA,KAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,UAAA,EAAA,GAAA,GAAA,CAAA;AACA;AACA,KAlEA;AAmEA,IAAA,iBAnEA,6BAmEA,QAnEA,EAmEA,MAnEA,EAmEA;AACA,WAAA,UAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA;AACA,WAAA,KAAA,GAAA,CAAA,CAAA,EAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA;AACA,WAAA,MAAA,GAAA,KAAA,QAAA,EAAA;AACA,WAAA,OAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA;AACA,WAAA,eAAA,GAAA,qBAAA;AACA,WAAA,IAAA,GAAA;AACA,QAAA,MAAA,EAAA,KAAA,MADA;AAEA,QAAA,QAAA,EAAA,CAAA;AACA,UAAA,KAAA,EAAA,cADA;AAEA,UAAA,IAAA,EAAA,KAAA,OAFA;AAGA,UAAA,WAAA,EAAA,KAAA,WAHA;AAIA,UAAA,eAAA,EAAA,KAAA,eAJA;AAKA,UAAA,WAAA,EAAA,CALA;AAMA,UAAA,IAAA,EAAA;AANA,SAAA;AAFA,OAAA;AAYA,KArFA;AAsFA,IAAA,MAtFA,kBAsFA,MAtFA,EAsFA;AACA,UAAA,IAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,KAAA,YAAA,EAAA,CAAA,GAAA,KAAA,UAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AACA;;AACA,aAAA,IAAA;AACA,KA5FA;AA6FA,IAAA,QA7FA,sBA6FA;AACA,UAAA,MAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,KAAA,YAAA,EAAA,CAAA,GAAA,KAAA,UAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,MAAA,CAAA,IAAA,CAAA,MAAA,GAAA,OAAA,CAAA,KAAA,EAAA,GAAA,CAAA,IAAA,CAAA,EAAA,SAAA,EAAA,MAAA,CAAA,SAAA,CAAA;AACA;;AACA,aAAA,MAAA;AACA,KAnGA;AAoGA,IAAA,QApGA,sBAoGA;AACA,UAAA,MAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA,KAAA,CAAA,CAAA,CAAA,EAAA,KAAA,KAAA,CAAA,CAAA,IAAA,CAAA,CAAA;AACA,UAAA,OAAA,GAAA,KAAA,OAAA,CAAA,KAAA,CAAA,KAAA,KAAA,CAAA,CAAA,CAAA,EAAA,KAAA,KAAA,CAAA,CAAA,IAAA,CAAA,CAAA;AACA,WAAA,eAAA,GAAA,EAAA;AACA,WAAA,IAAA,GAAA;AACA,QAAA,MAAA,EAAA,MADA;AAEA,QAAA,QAAA,EAAA,CAAA;AACA,UAAA,KAAA,EAAA,cADA;AAEA,UAAA,IAAA,EAAA,OAFA;AAGA,UAAA,WAAA,EAAA,KAAA,WAHA;AAIA,UAAA,WAAA,EAAA,CAJA;AAKA,UAAA,eAAA,EAAA,KAAA,eALA;AAMA,UAAA,IAAA,EAAA;AANA,SAAA;AAFA,OAAA;AAYA,KApHA;AAqHA,IAAA,QArHA,oBAqHA,CArHA,EAqHA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA,WAAA,KAAA,GAAA,CAAA;AACA,UAAA,MAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA,EAAA,GAAA,GAAA,CAAA,CAAA;AACA,UAAA,QAAA,GAAA,EAAA;AACA,MAAA,QAAA,CAAA,IAAA,CAAA,KAAA,OAAA,CAAA,KAAA,CAAA,KAAA,EAAA,GAAA,GAAA,CAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,eAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,SAAA,GAAA,KAAA,OAAA,CAAA,KAAA,CAAA,KAAA,eAAA,CAAA,CAAA,CAAA,EAAA,KAAA,eAAA,CAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA;AACA,YAAA,SAAA,GAAA,KAAA,CAAA,KAAA,eAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AACA,YAAA,UAAA,GAAA,KAAA,CAAA,KAAA,UAAA,GAAA,KAAA,eAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AACA,YAAA,CAAA,GAAA,SAAA,CAAA,MAAA,CAAA,SAAA,EAAA,MAAA,CAAA,UAAA,CAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA,CAAA,KAAA,EAAA,GAAA,GAAA,CAAA,CAAA;AACA,QAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AACA;;AACA,UAAA,WAAA,GAAA,CAAA,KAAA,eAAA,EAAA,WAAA,EAAA,WAAA,EAAA,WAAA,EAAA,WAAA,EAAA,WAAA,EAAA,WAAA,EAAA,WAAA,EAAA,WAAA,CAAA;AACA,UAAA,cAAA,GAAA,EAAA;;AACA,WAAA,IAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,QAAA,CAAA,MAAA,EAAA,GAAA,EAAA,EAAA;AACA,QAAA,cAAA,CAAA,IAAA,CACA;AACA,UAAA,IAAA,EAAA,QAAA,CAAA,GAAA,CADA;AAEA,UAAA,WAAA,EAAA,KAAA,WAFA;AAGA,UAAA,eAAA,EAAA,WAAA,CAAA,GAAA,GAAA,WAAA,CAAA,MAAA,CAHA;AAIA,UAAA,WAAA,EAAA,CAJA;AAKA,UAAA,IAAA,EAAA;AALA,SADA;AASA;;AACA,WAAA,IAAA,GAAA;AACA,QAAA,MAAA,EAAA,MADA;AAEA,QAAA,QAAA,EAAA;AAFA,OAAA;AAIA,UAAA,CAAA,GAAA,CAAA,KAAA,MAAA,CAAA,YAAA,CAAA,WAAA,GAAA,KAAA,KAAA,CAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,KAAA,UAAA;AACA,WAAA,OAAA,CAAA,WAAA,GAAA,GAAA;AACA,WAAA,OAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,MAAA;AACA,WAAA,OAAA,CAAA,QAAA,CAAA,CAAA,EAAA,KAAA,MAAA,EAAA,CAAA,CAAA,EAAA,KAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,UAAA,EAAA,GAAA,GAAA,CAAA;AACA,KAzJA;AA0JA;AACA,IAAA,cA3JA,0BA2JA,CA3JA,EA2JA,KA3JA,EA2JA;AACA,WAAA,aAAA,CAAA,UAAA,GAAA,KAAA,CAAA,MAAA,GAAA,KAAA,KAAA,CAAA,CAAA,CAAA;AACA,WAAA,aAAA,CAAA,MAAA,GAAA,KAAA,CAAA,KAAA,CAAA,CAAA;AACA,WAAA,aAAA,CAAA,MAAA,GAAA,KAAA,MAAA;AACA,KA/JA;AAgKA,IAAA,iBAhKA,6BAgKA,GAhKA,EAgKA,IAhKA,EAgKA,KAhKA,EAgKA;AACA,UAAA,IAAA,IAAA,KAAA,aAAA,CAAA,SAAA,KAAA,KAAA,CAAA,MAAA,IAAA,KAAA,aAAA,CAAA,UAAA,KAAA,IAAA,EAAA;AACA,aAAA,aAAA,CAAA,SAAA,GAAA,KAAA,CAAA,MAAA,GAAA,KAAA,KAAA,CAAA,CAAA,CAAA;AACA,aAAA,aAAA,CAAA,CAAA,GAAA,KAAA,CAAA,KAAA,CAAA,CAAA,GAAA,KAAA,aAAA,CAAA,MAAA;AACA,aAAA,OAAA,CAAA,WAAA,GAAA,GAAA;AACA,aAAA,OAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,MAAA;AACA,aAAA,OAAA,CAAA,QAAA,CAAA,KAAA,aAAA,CAAA,MAAA,GAAA,EAAA,EACA,KAAA,MADA,EAEA,KAAA,aAAA,CAAA,CAFA,EAGA,KAAA,KAHA;AAIA,OATA,MAUA,IAAA,KAAA,aAAA,CAAA,UAAA,IAAA,IAAA,EAAA;AACA,aAAA,OAAA,CAAA,WAAA,GAAA,GAAA;AACA,YAAA,CAAA,GAAA,KAAA,CAAA,KAAA,CAAA,CAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA;AAEA,aAAA,OAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,MAAA;AACA,aAAA,OAAA,CAAA,QAAA,CAAA,CAAA,GAAA,EAAA,EAAA,KAAA,MAAA,EAAA,CAAA,EAAA,KAAA,KAAA;AACA;AACA,KApLA;AAqLA,IAAA,aArLA,2BAqLA;AACA,WAAA,OAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,MAAA;AACA,WAAA,eAAA,CAAA,IAAA,CAAA,GAAA,CAAA,KAAA,aAAA,CAAA,UAAA,EAAA,KAAA,aAAA,CAAA,SAAA,CAAA,EAAA,IAAA,CAAA,GAAA,CAAA,KAAA,aAAA,CAAA,UAAA,EAAA,KAAA,aAAA,CAAA,SAAA,CAAA;AACA,WAAA,aAAA,GAAA;AACA,QAAA,CAAA,EAAA,CADA;AAEA,QAAA,MAAA,EAAA,CAFA;AAGA,QAAA,MAAA,EAAA,CAHA;AAIA,QAAA,UAAA,EAAA,IAJA;AAKA,QAAA,SAAA,EAAA;AALA,OAAA;AAOA,WAAA,UAAA,GAAA,KAAA;AAGA,KAlMA;AAmMA,IAAA,eAnMA,2BAmMA,GAnMA,EAmMA,GAnMA,EAmMA;AACA,WAAA,eAAA,CAAA,IAAA,CAAA,GAAA;AACA,WAAA,eAAA,CAAA,IAAA,CAAA,GAAA;AACA,WAAA,QAAA,CAAA,KAAA,KAAA;AACA,WAAA,KAAA,CAAA,WAAA,GAAA,GAAA,GAAA,GAAA;AACA,UAAA,CAAA,GAAA,CAAA,GAAA,GAAA,KAAA,KAAA,CAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,KAAA,UAAA;AACA,WAAA,OAAA,CAAA,WAAA,GAAA,GAAA;AACA,WAAA,OAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,KAAA,OAAA,CAAA,MAAA,CAAA,MAAA;AACA,WAAA,OAAA,CAAA,QAAA,CAAA,CAAA,EAAA,KAAA,MAAA,EAAA,CAAA,CAAA,EAAA,KAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,UAAA,EAAA,GAAA,GAAA,CAAA;AACA,KA5MA;AA6MA,IAAA,YA7MA,wBA6MA,CA7MA,EA6MA;AACA,UAAA,CAAA,GAAA,QAAA,CAAA,cAAA,CAAA,SAAA,CAAA;AAEA,MAAA,CAAA,CAAA,KAAA,CAAA,QAAA,GAAA,UAAA;AACA,MAAA,CAAA,CAAA,KAAA,CAAA,GAAA,GAAA,CAAA,CAAA,MAAA,CAAA,SAAA,GAAA,IAAA;AACA,MAAA,CAAA,CAAA,KAAA,CAAA,IAAA,GAAA,MAAA;AAEA,UAAA,GAAA,GAAA,CAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AACA,MAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,CAAA,CAAA,KAAA,CAAA,KAAA,GAAA,EAAA;AACA,MAAA,GAAA,CAAA,MAAA,CAAA,MAAA,GAAA,CAAA,CAAA,KAAA,CAAA,MAAA;AACA,WAAA,MAAA,GAAA,CAAA,CAAA,KAAA,CAAA,MAAA,CAAA,UAAA,EAAA,GAAA;AACA,WAAA,KAAA,GAAA,CAAA,CAAA,KAAA,CAAA,MAAA,CAAA,UAAA,EAAA,MAAA,GAAA,EAAA;AACA,WAAA,UAAA,GAAA,CAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,GAAA,CAAA,CAAA,KAAA,CAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AACA,WAAA,OAAA,GAAA,GAAA;AACA;AA3NA;AAvIA,CAAA","sourcesContent":["<template>\n  <v-app >\n    <v-main>\n      <audio src=\"@/assets/song2.mp3\" id=\"audio\" crossorigin=\"anonymous\" ref=\"audio\"></audio>\n      <v-container fluid>\n        <div\n          class=\"text-h6 transition-swing text-center mt-6\"\n        >\n          Analyze and Select samples from audio files\n       </div>\n       <div\n         class=\"caption transition-swing text-center mb-6\"\n       >\n         Yumeji's Theme sample data\n      </div>\n      <div class=\"d-flex justify-center mb-3 mt-1\">\n        <v-btn @click=\"selectable=true;pause();\">Create sample</v-btn>\n        <v-btn v-if=\"!playing\" @click=\"play()\" @keyup.prevent=\"(e) => event.preventDefault()\" style=\"z-index:1\" class=\"mt-n4 mx-n2 elevation-2\" fab large >\n          <v-icon large color=\"green darken-1\">mdi-play</v-icon>\n        </v-btn>\n        <v-btn v-else @click=\"pause();\" @keyup.prevent=\"(e) => event.preventDefault()\" style=\"z-index:1\" class=\"mt-n4 mx-n2 elevation-2\" fab large >\n          <v-icon large color=\"red darken-2\">mdi-pause</v-icon>\n        </v-btn>\n        <v-btn style=\"z-index:0\" @click=\"clearAll\">Clean samples</v-btn>\n      </div>\n        <v-card  flat class=\"mx-auto my-auto\" :width=\"width*0.7\">\n\n          <BarChart :height=\"190\" :updateChart=\"updateBarChart\" :dataarray=\"dataArray\"/>\n\n          <LineChart\n          :chartData=\"data\"\n          :options=\"options\"\n          :range=\"range\"\n          :height=\"400\"\n          @setrange=\"setRange\"\n          @chartobject=\"overlayLayer\" refs=\"chart\" id=\"chart\" @start=\"startSelection\" @movement=\"movementSelection\" @stop=\"stopSelection\" :selectable=\"selectable\"\n          ref=\"linechart\"\n          @goToFrame=\"goToFrame\"\n          />\n\n            <canvas id=\"overlay\"\n            width=\"1200\"\n            height=\"400\"\n            class=\"selectable\"\n            @mousedown=\"startSelection\"\n            @mousemove=\"movementSelection\"\n            @mouseup=\"stopSelection\"\n            ref=\"overlaychart\"\n            />\n\n\n          <RangeSlider @setrange=\"setRange\" :min=\"datasetstart\" :max=\"datasetend\" :width=\"width*0.9\"/>\n\n        </v-card>\n\n\n      </v-container>\n\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport BarChart from './components/BarChart.vue'\nimport RangeSlider from './components/RangeSlider.vue'\nimport LineChart from './components/LineChart.vue'\n\nimport moment from 'moment'\n\nexport default {\n  name: 'App',\n  components: {\n    BarChart,\n    LineChart,\n    RangeSlider\n  },\n  data: () => ({\n    options: {\n      elements: {\n          point:{\n              radius: 0\n          }\n      },\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        yAxes: [\n          {\n            gridLines: {\n              display: true,\n              offsetGridLines: false,\n            },\n          }],\n          xAxes: [{\n            gridLines: {\n              display: true,\n              offsetGridLines: false,\n              zeroLineWidth: 2,\n              tickMarkLength: 5,\n\n            },\n            ticks: {\n                padding: 10,\n            }\n          }]\n      },\n      legend: {\n          display: false,\n      },\n      animation: {\n        duration: 0\n      }\n    },\n    data: {\n      labels: [],\n      datasets: [{\n          label: 'Sonometria 1',\n          data: [],\n          fill: true,\n        }\n      ]\n    },\n    selectable: false,\n    selectionRect: {\n      w: 0,\n      startX: 0,\n      startY: 0,\n      startIndex: null,\n      stopIndex: null\n    },\n    overlay: null,\n    labels: null,\n    dataset: null,\n    datasetstart: 0,\n    datasetend: 360,\n    range: [0,360],\n    width: window.innerWidth,\n    updateBarChart: false,\n    backgroundcolor: 'hsla(2, 12%, 50%,0.4)',\n    bordercolor: 'hsla(2, 12%, 50%,0.4)',\n    rangeselections: [],\n    dataArray: null,\n    audio: null,\n    source: null,\n    analyser: null,\n    analyserinterval: null,\n    starty: null,\n    stopy: null,\n    chartwidth: null,\n    motion: null,\n    playing: false,\n    overlaybtn: true,\n  }),\n  mounted () {\n    const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n    this.audio = document.querySelector('audio');\n    this.source = audioCtx.createMediaElementSource(this.audio);\n\n    let _this = this;\n\n    // We fetch then process the file, we get Db levels of the whole audiofile\n\n    fetch(require('@/assets/song2.mp3'))\n      .then(function(resp) {return resp.arrayBuffer()})\n      .then(audioCtx.decodeAudioData.bind(audioCtx))\n      .then(function(buffer) {\n        let channel = buffer.getChannelData(0);\n\n        let points = [0];\n        let duration = buffer.duration;\n\n        for(let x = 1, i, v; x < duration; x++) {\n          i = ((x / duration) * channel.length)|0;\n          v = Math.abs(getdB(channel, i, 440));\n          points.push(v);\n        }\n        _this.setProccessedData(duration,points);\n        // calculates RMS per window and returns normalized dB\n        function getdB(buffer, pos, winSize) {\n          let sum = 0;\n          for(let v, i = pos - winSize; i <= pos; i++) {\n            v = i < 0 ? 0 : buffer[i];\n            sum += v * v;\n          }\n          let rms = Math.sqrt(sum / winSize);  // corrected!\n          return .4*Math.log10(rms);\n        }\n    });\n\n    //Create analyser, connect it to source and destination and create buffer array\n    this.analyser = audioCtx.createAnalyser();\n    this.source.connect(this.analyser);\n    this.analyser.connect(audioCtx.destination);\n    this.analyser.smoothingTimeConstant= 0.7\n    this.analyser.fftSize = 64; //Sample rate is 44100hz, we have enough accuracy with 64 .\n\n\n\n    //We are adding keydown control\n    window.addEventListener('keydown', this.switcher);\n  },\n  destroyed () {\n    window.removeEventListener('keydown', this.switcher);\n  },\n  methods: {\n    switcher(e) {\n      if(e.code === 'Space') {\n        if(this.audio.paused) {\n          this.play();\n        }\n        else {\n          this.pause();\n        }\n      }\n      else if(e.code === 'ArrowRight') {\n        this.audio.currentTime += 3;\n        let x = this.chartwidth*this.audio.currentTime / this.source.mediaElement.duration ;\n        this.overlay.clearRect(0, 0, this.overlay.canvas.width, this.overlay.canvas.height);\n        this.overlay.fillRect(x,this.starty,-6,this.stopy);\n      }\n      else if(e.code === 'ArrowLeft') {\n        this.audio.currentTime -= 3;\n        let x = this.chartwidth*this.audio.currentTime / this.source.mediaElement.duration ;\n        this.overlay.clearRect(0, 0, this.overlay.canvas.width, this.overlay.canvas.height);\n        this.overlay.fillRect(x,this.starty,-6,this.stopy);\n      }\n    },\n    play() {\n      this.playing = true;\n      this.audio.play();\n\n      //let labels = [\"20Hz\", \"25 Hz\", \"31.5 Hz\", \"40 Hz\", \"50 Hz\", \"63 Hz\", \"80 Hz\", \"100 Hz\", \"125 Hz\", \"160 Hz\", \"200 Hz\", \"250 Hz\", \"315 Hz\", \"400 Hz\", \"500 Hz\", \"630 Hz\", \"800 Hz\", \"1000 Hz\", \"1250 Hz\", \"1600 Hz\", \"2000 Hz\", \"2500 Hz\", \"3150 Hz\", \"4000 Hz\", \"5000 Hz\", \"6300 Hz\", \"8000 Hz\", \"10 kHz\", \"12,5 kHz\", \"16 kHz\", \"20 kHz\"];\n      this.analyserinterval = setInterval(() => {\n        let buffer = this.analyser.frequencyBinCount;\n        this.dataArray = new Uint8Array(buffer);\n        this.analyser.getByteFrequencyData(this.dataArray);\n        this.updateBarChart = !this.updateBarChart;\n      }, 90);\n      this.motion = window.requestAnimationFrame(this.progressBar)\n      //this.motion = window.requestAnimationFrame(this.progressBar);\n    },\n    pause() {\n      this.playing = false;\n      this.audio.pause();\n      clearInterval(this.analyserinterval);\n      window.cancelAnimationFrame(this.motion);\n    },\n    goToFrame(point) {\n      if(!this.selectable) {\n        this.audio.currentTime= (point._index+this.range[0]);\n        let x = (point._index/(this.range[1]-this.range[0])) * this.chartwidth;\n        this.overlay.globalAlpha = 0.5;\n        this.overlay.clearRect(0, 0, this.overlay.canvas.width, this.overlay.canvas.height);\n        this.overlay.fillRect(x,this.starty,-6,this.$refs.linechart._data._chart.scales['x-axis-0'].top-7);\n      }\n    },\n    progressBar() {\n      if(!this.audio.paused) {\n          let x = ((this.source.mediaElement.currentTime-this.range[0]) / (this.range[1]-this.range[0])) * this.chartwidth;\n          this.overlay.globalAlpha = 0.5;\n          this.overlay.clearRect(0, 0, this.overlay.canvas.width, this.overlay.canvas.height);\n          this.overlay.fillRect(x,this.starty,-6,this.$refs.linechart._data._chart.scales['x-axis-0'].top-7);\n          window.requestAnimationFrame(this.progressBar)\n      }\n      else {\n        let x = ((this.source.mediaElement.currentTime-this.range[0]) / (this.range[1]-this.range[0])) * this.chartwidth;\n        this.overlay.globalAlpha = 0.5;\n        this.overlay.clearRect(0, 0, this.overlay.canvas.width, this.overlay.canvas.height);\n        this.overlay.fillRect(x,this.starty,-6,this.$refs.linechart._data._chart.scales['x-axis-0'].top-7);\n      }\n    },\n    setProccessedData(duration,points) {\n      this.datasetend = Math.floor(duration);\n      this.range = [0,Math.floor(duration)];\n      this.labels = this.dBLabels();\n      this.dataset = this.dBData(points);\n      this.backgroundcolor = 'hsl(0, 0%, 53%,0.2)'\n      this.data = {\n        labels: this.labels,\n        datasets: [{\n            label: 'Sonometria 1',\n            data: this.dataset,\n            borderColor: this.bordercolor,\n            backgroundColor: this.backgroundcolor,\n            borderWidth: 2,\n            fill: true,\n          },\n        ]\n      }\n    },\n    dBData(points) {\n      let data = [];\n      for(let i=this.datasetstart; i<this.datasetend; i++) {\n        data.push(points[i]);\n      }\n      return data\n    },\n    dBLabels() {\n      let labels = [];\n      for(let i=this.datasetstart; i<this.datasetend; i++) {\n        labels.push(moment().startOf('day').add(1*i, 'seconds').format('H:mm:ss'))\n      }\n      return labels\n    },\n    clearAll() {\n      let labels = this.labels.slice(this.range[0], this.range[1]+1);\n      let dataset = this.dataset.slice(this.range[0],this.range[1]+1);\n      this.rangeselections = [];\n      this.data = {\n        labels: labels,\n        datasets: [{\n            label: 'Sonometria 1',\n            data: dataset,\n            borderColor: this.bordercolor,\n            borderWidth: 2,\n            backgroundColor: this.backgroundcolor,\n            fill: true\n          }\n        ]\n      };\n    },\n    setRange(a) {\n      let start = a[0];\n      let end = a[1];\n      this.range = a;\n      let labels = this.labels.slice(start, end+1);\n      let datasets = [];\n      datasets.push(this.dataset.slice(start,end+1));\n      for(let i=0; i<this.rangeselections.length; i++) {\n        let selection = this.dataset.slice(this.rangeselections[i],this.rangeselections[i+1]+1);\n        let firstpart = Array(this.rangeselections[i]).fill(null);\n        let secondpart = Array(this.datasetend-this.rangeselections[i+1]).fill(null);\n        let d = firstpart.concat(selection).concat(secondpart)\n        datasets.push(d.slice(start,end+1));\n        i = i+1;\n      }\n      let backgrounds = [this.backgroundcolor, \"#FDD8358C\", \"#B39DDB8C\", \"#9FA8DA8C\", \"#EF9A9A8C\", \"#F48FB18C\", \"#CE93D88C\",'#80CBC48C','#BCAAA48C']\n      let sliceddatasets = [];\n      for(let i=0;i<datasets.length;i++) {\n        sliceddatasets.push(\n          {\n            data: datasets[i],\n            borderColor: this.bordercolor,\n            backgroundColor: backgrounds[i%backgrounds.length],\n            borderWidth: 2,\n            fill: true\n          }\n        )\n      }\n      this.data = {\n        labels: labels,\n        datasets: sliceddatasets\n      };\n      let x = ((this.source.mediaElement.currentTime-this.range[0]) / (this.range[1]-this.range[0])) * this.chartwidth;\n      this.overlay.globalAlpha = 0.5;\n      this.overlay.clearRect(0, 0, this.overlay.canvas.width, this.overlay.canvas.height);\n      this.overlay.fillRect(x,this.starty,-6,this.$refs.linechart._data._chart.scales['x-axis-0'].top-7);\n    },\n    //This next three functions are handling user inputs when selecting areas of the chart\n    startSelection(e,point) {\n      this.selectionRect.startIndex = point._index+this.range[0];\n      this.selectionRect.startX = point._view.x;\n      this.selectionRect.startY = this.starty;\n    },\n    movementSelection(evt,drag,point) {\n      if (drag && this.selectionRect.stopIndex !== point._index && this.selectionRect.startIndex !== null) {\n        this.selectionRect.stopIndex = point._index+this.range[0];\n        this.selectionRect.w = (point._view.x) - this.selectionRect.startX;\n        this.overlay.globalAlpha = 0.5;\n        this.overlay.clearRect(0, 0, this.overlay.canvas.width, this.overlay.canvas.height);\n        this.overlay.fillRect(this.selectionRect.startX-34,\n          this.starty,\n          this.selectionRect.w,\n          this.stopy);\n      }\n      else if(this.selectionRect.startIndex == null) {\n        this.overlay.globalAlpha = 0.5;\n        let x = point._view.x;\n        console.log(x)\n        console.log(point._index)\n\n        this.overlay.clearRect(0, 0, this.overlay.canvas.width, this.overlay.canvas.height);\n        this.overlay.fillRect(x-34,this.starty,2,this.stopy);\n      }\n    },\n    stopSelection() {\n      this.overlay.clearRect(0, 0, this.overlay.canvas.width, this.overlay.canvas.height);\n      this.addNewSelection(Math.min(this.selectionRect.startIndex,this.selectionRect.stopIndex), Math.max(this.selectionRect.startIndex,this.selectionRect.stopIndex) )\n      this.selectionRect = {\n        w: 0,\n        startX: 0,\n        startY: 0,\n        startIndex: null,\n        stopIndex: null\n      };\n      this.selectable = false;\n\n\n    },\n    addNewSelection(min,max) {\n      this.rangeselections.push(min);\n      this.rangeselections.push(max);\n      this.setRange(this.range);\n      this.audio.currentTime= (max+min);\n      let x = ((min-this.range[0]) / (this.range[1]-this.range[0])) * this.chartwidth;\n      this.overlay.globalAlpha = 0.5;\n      this.overlay.clearRect(0, 0, this.overlay.canvas.width, this.overlay.canvas.height);\n      this.overlay.fillRect(x,this.starty,-6,this.$refs.linechart._data._chart.scales['x-axis-0'].top-7);\n    },\n    overlayLayer(e) {\n      const c = document.getElementById('overlay');\n\n      c.style.position = \"absolute\";\n      c.style.top = e.canvas.offsetTop+'px';\n      c.style.left = '33px';\n\n      const ctx = c.getContext(\"2d\");\n      ctx.canvas.width = e.chart.width-33;\n      ctx.canvas.height = e.chart.height;\n      this.starty = e.chart.scales['y-axis-0'].top\n      this.stopy = e.chart.scales['y-axis-0'].bottom-37\n      this.chartwidth = e.chart.chartArea.right - e.chart.chartArea.left+5\n      this.overlay = ctx;\n    }\n  }\n}\n</script>\n\n<style>\n.selectable {\n  pointer-events:none;\n}\n</style>\n"],"sourceRoot":"src"}]}